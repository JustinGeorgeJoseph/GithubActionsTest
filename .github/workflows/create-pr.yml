name: Create PR to push the master change to dev

on:
  push:
    branches:
      - main

jobs:
  create-branch-and-pr:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch all branches and their history

          
    # Step 2: Configure Git to push remote repositories
    - name: Configure Git push.autoSetupRemote
      run: |
        git config --global --add --bool push.autoSetupRemote true
        echo "Configured git to push the newly created branch to remote repository"

    - name: Set up Git config
      run: |
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"

    # Step 2: Create a new branch
    - name: Create new branch from dev branch
      run: |
        MASTER_BARNCH_LAST_COMMIT_HASH=$(git log -1 --pretty=format:"%h")
        MASTER_BARNCH_LAST_COMMIT_MESSAGE=$(git log -1 --pretty=format:"%s")
        echo "COMMIT_MESSAGE=$MASTER_BARNCH_LAST_COMMIT_MESSAGE" >> $GITHUB_ENV
        NEW_BRANCH="master-changes-to-dev-after-$MASTER_BARNCH_LAST_COMMIT_HASH"
        git checkout "dev"
        git checkout -b $NEW_BRANCH
        echo "Created new branch: $NEW_BRANCH"
    
    # Step 3: Merge another branch into the new branch
    - name: Merge source branch into the new branch
      run: |
        echo "Last commit message -  $COMMIT_MESSAGE"
        SOURCE_BRANCH="main"  # Branch to be merged into new branch
        git fetch origin $SOURCE_BRANCH
        git merge origin/$SOURCE_BRANCH --no-edit
        echo "Merged $SOURCE_BRANCH into $NEW_BRANCH"

    # Step 4: Push the new branch to the repository
    - name: Push new branch to the repository
      run: |
        echo "Last commit message - $COMMIT_MESSAGE"
        git push origin $NEW_BRANCH
        echo "Pushed new branch: $NEW_BRANCH"

    - name: Create pr
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        echo "Last commit message -  $COMMIT_MESSAGE"
        MESSAGE="Master changes to dev after $COMMIT_MESSAGE"
        gh pr create --base dev --head "$NEW_BRANCH" --title "$MESSAGE" --body "$MESSAGE" --label "Master changes to dev"
        echo "Configured Git to set up remote tracking for new branches automatically."
   



